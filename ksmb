#!/bin/bash
# Kerberized Samba backend for CUPS
. /etc/default/cups-ksmb
debug=${debug:=false}
ticket_prefix=${ticket_prefix:=/tmp/krb5cc_}

if [ $# -eq 0 ]; then
    echo 'network ksmb "Unknown" "SAMBA + Kerberos"'
    exit 0
fi

if [ $# -lt 5 -o $# -gt 6 ]; then
    echo "Usage: $0 job-id user title copies options [file]\n"
    exit 1
fi

output=/dev/null
if $debug; then
    set -x
    output=$(mktemp /tmp/printlog.XXXXXX)
fi
exec >> $output 2>&1

# run as root, can't check $USER due to environment pollution
if [ "root" != $(whoami) ]; then
    exec sudo $0 "$@"
fi

printuser=$2
printer=$(echo $DEVICE_URI | sed 's,k*smb://,,g')
server=$(echo $printer | sed 's,/.*$,,g')
printer=$(echo $printer | sed 's,.*/,,g;s,%20,\\\ ,g')

# Set environment variable to ticket cache of user.
uid=$(id -u "$printuser")
export KRB5CCNAME=$(ls -t /tmp/krb5cc_${uid}_* | head -n 1)

echo "Printer: $printer"
echo "Server: $server"
echo "Ticket cache: $KRB5CCNAME"

printdatafile=$(mktemp /tmp/ksmb.XXXXXXXXXXX)
cleanup() { rm -f $printdatafile; unset KRB5CCNAME; }
trap "cleanup" 0 1 2 3 15

if [ $# -eq 5 ]; then
    # There are 5 arguments input will follow on stdin.
    echo "Tempfile created at $printdatafile."
    cat - > $printdatafile
elif ! cp $6 $printdatafile; then
    echo "Could not copy $6"
    exit 1
fi

chown $printuser $printdatafile
printcmd="smbclient //$server/$printer -k -E -U \"$printuser\" -c \"print $printdatafile\""
echo "Print command used is: $printcmd"
exec su -c "$printcmd" $printuser
